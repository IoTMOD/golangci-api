Transform: 'AWS::Serverless-2016-10-31'
AWSTemplateFormatVersion: "2010-09-09"


Resources:
  # users
  golangciProdUser:
    Type: AWS::IAM::User
    Properties:
      Policies:
        - PolicyName: GolangciProdAccess
          PolicyDocument:
            Statement:
                - Effect: Allow
                  Action: ["sqs:SendMessage", "sqs:ReceiveMessage", "sqs:ChangeMessageVisibility", "sqs:DeleteMessage"]
                  Resource:
                    - !GetAtt primaryQueue.Arn
                    - !GetAtt analyzesQueue.Arn
      UserName: golangciProdUser
  golangciTestUser:
    Type: AWS::IAM::User
    Properties:
      Policies:
        - PolicyName: GolangciTestAccess
          PolicyDocument:
            Statement:
                - Effect: Allow
                  Action: ["sqs:SendMessage", "sqs:ReceiveMessage", "sqs:ChangeMessageVisibility", "sqs:DeleteMessage"]
                  Resource:
                    - !GetAtt testPrimaryQueue.Arn
                    - !GetAtt testAnalyzesQueue.Arn
      UserName: golangciTestUser
  golangciDevUser:
    Type: AWS::IAM::User
    Properties:
      Policies:
        - PolicyName: GolangciDevAccess
          PolicyDocument:
            Statement:
                - Effect: Allow
                  Action: ["sqs:SendMessage", "sqs:ReceiveMessage", "sqs:ChangeMessageVisibility", "sqs:DeleteMessage"]
                  Resource: !GetAtt devPrimaryQueue.Arn
      UserName: golangciDevUser
  golangciDevIsaevUser:
    Type: AWS::IAM::User
    Properties:
      Policies:
        - PolicyName: GolangciDevIsaevAccess
          PolicyDocument:
            Statement:
                - Effect: Allow
                  Action: ["sqs:SendMessage", "sqs:ReceiveMessage", "sqs:ChangeMessageVisibility", "sqs:DeleteMessage"]
                  Resource:
                    - !GetAtt devIsaevPrimaryQueue.Arn
                    - !GetAtt devIsaevAnalyzesQueue.Arn
      UserName: golangciDevIsaevUser

  # user keys
  golangciProdUserKeys:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref golangciProdUser
  golangciDevUserKeys:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref golangciDevUser
  golangciDevIsaevUserKeys:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref golangciDevIsaevUser
  golangciTestUserKeys:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref golangciTestUser

  # primary queue
  primaryQueue:
    Type: AWS::SQS::Queue
    Properties:
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt deadLetterPrimaryQueue.Arn
        maxReceiveCount: 5
      VisibilityTimeout: 60
      ReceiveMessageWaitTimeSeconds: 20 # save costs on polling
      MessageRetentionPeriod: 345600 # 4d
  deadLetterPrimaryQueue:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 60
      ReceiveMessageWaitTimeSeconds: 20 # save costs on polling
      MessageRetentionPeriod: 1209600 # 14d
  testPrimaryQueue:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 60
      ReceiveMessageWaitTimeSeconds: 20 # save costs on polling
      MessageRetentionPeriod: 345600 # 4d
  devPrimaryQueue:
    Type: AWS::SQS::Queue
    Properties:
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt devDeadLetterPrimaryQueue.Arn
        maxReceiveCount: 5
      VisibilityTimeout: 60
      ReceiveMessageWaitTimeSeconds: 20 # save costs on polling
      MessageRetentionPeriod: 345600 # 4d
  devDeadLetterPrimaryQueue:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 60
      ReceiveMessageWaitTimeSeconds: 20 # save costs on polling
      MessageRetentionPeriod: 1209600 # 14d
  devIsaevPrimaryQueue:
    Type: AWS::SQS::Queue
    Properties:
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt devIsaevDeadLetterPrimaryQueue.Arn
        maxReceiveCount: 5
      VisibilityTimeout: 60
      ReceiveMessageWaitTimeSeconds: 20 # save costs on polling
      MessageRetentionPeriod: 345600 # 4d
  devIsaevDeadLetterPrimaryQueue:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 60
      ReceiveMessageWaitTimeSeconds: 20 # save costs on polling
      MessageRetentionPeriod: 1209600 # 14d

  # analyzes queue
  analyzesQueue:
    Type: AWS::SQS::Queue
    Properties:
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt deadLetterAnalyzesQueue.Arn
        maxReceiveCount: 10
      VisibilityTimeout: 600 # get in sync with worker timeout and staler
      ReceiveMessageWaitTimeSeconds: 20 # save costs on polling
      MessageRetentionPeriod: 1209600 # 14d
  deadLetterAnalyzesQueue:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 600 # get in sync with worker timeout and staler
      ReceiveMessageWaitTimeSeconds: 20 # save costs on polling
      MessageRetentionPeriod: 1209600 # 14d
  devIsaevAnalyzesQueue:
    Type: AWS::SQS::Queue
    Properties:
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt deadLetterDevIsaevAnalyzesQueue.Arn
        maxReceiveCount: 10
      VisibilityTimeout: 600 # get in sync with worker timeout and staler
      ReceiveMessageWaitTimeSeconds: 20 # save costs on polling
      MessageRetentionPeriod: 1209600 # 14d
  deadLetterDevIsaevAnalyzesQueue:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 600 # get in sync with worker timeout and staler
      ReceiveMessageWaitTimeSeconds: 20 # save costs on polling
      MessageRetentionPeriod: 1209600 # 14d
  testAnalyzesQueue:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 600 # get in sync with worker timeout and staler
      ReceiveMessageWaitTimeSeconds: 20 # save costs on polling
      MessageRetentionPeriod: 1209600 # 14d

Outputs:
  # primary queue
  primaryQueueURL:
    Description: "URL of the primary queue"
    Value: !Ref primaryQueue
  deadLetterPrimaryQueueURL:
    Description: "URL of the dead letter for the primary queue"
    Value: !Ref deadLetterPrimaryQueue
  testPrimaryQueueURL:
    Description: "URL of the test primary queue"
    Value: !Ref testPrimaryQueue
  devPrimaryQueueURL:
    Description: "URL of the dev primary queue"
    Value: !Ref devPrimaryQueue
  devIsaevPrimaryQueueURL:
    Description: "URL of the dev Isaev primary queue"
    Value: !Ref devIsaevPrimaryQueue

  # analyzes queue
  analyzesQueueURL:
    Description: "URL of the analyzes queue"
    Value: !Ref analyzesQueue
  deadLetterAnalyzesQueueURL:
    Description: "URL of the dead letter for the analyzes queue"
    Value: !Ref deadLetterAnalyzesQueue
  testAnalyzesQueueURL:
    Description: "URL of the test analyzes queue"
    Value: !Ref testAnalyzesQueue
  devIsaevAnalyzesQueueURL:
    Description: "URL of the dev Isaev analyzes queue"
    Value: !Ref devIsaevAnalyzesQueue

  # user
  golangciProdUserAccessKey:
    Value: !Ref golangciProdUserKeys
    Description: AWSAccessKeyId of golangciProdUser user
  golangciProdUserSecretKey:
    Value: !GetAtt [golangciProdUserKeys, SecretAccessKey]
    Description: AWSSecretKey of golangciProdUser user
  golangciTestUserAccessKey:
    Value: !Ref golangciTestUserKeys
    Description: AWSAccessKeyId of golangciTestUser user
  golangciTestUserSecretKey:
    Value: !GetAtt [golangciTestUserKeys, SecretAccessKey]
    Description: AWSSecretKey of golangciTestUser user
  golangciDevUserAccessKey:
    Value: !Ref golangciDevUserKeys
    Description: AWSAccessKeyId of golangciDevUser user
  golangciDevUserSecretKey:
    Value: !GetAtt [golangciDevUserKeys, SecretAccessKey]
    Description: AWSSecretKey of golangciDevUser user
  golangciDevIsaevUserAccessKey:
    Value: !Ref golangciDevIsaevUserKeys
    Description: AWSAccessKeyId of golangciDevIsaevUser user
  golangciDevIsaevUserSecretKey:
    Value: !GetAtt [golangciDevIsaevUserKeys, SecretAccessKey]
    Description: AWSSecretKey of golangciDevIsaevUser user