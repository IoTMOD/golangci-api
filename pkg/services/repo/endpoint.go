// Code generated by genservices. DO NOT EDIT.
package repo

import (
	"context"
	"runtime/debug"

	"github.com/go-kit/kit/endpoint"
	"github.com/golangci/golangci-api/app/returntypes"
	"github.com/golangci/golangci-api/pkg/endpointutil"
	"github.com/golangci/golangci-api/pkg/request"
	"github.com/golangci/golangci-shared/pkg/logutil"
	"github.com/pkg/errors"
)

type CreateRequest struct {
	ReqRepo *request.BodyRepo
}

type CreateResponse struct {
	err error
	*returntypes.RepoInfo
}

func makeCreateEndpoint(svc Service, log logutil.Log) endpoint.Endpoint {
	return func(ctx context.Context, request interface{}) (resp interface{}, err error) {
		req := request.(CreateRequest)
		rc := endpointutil.RequestContext(ctx)
		defer func() {
			if rerr := recover(); rerr != nil {
				rc.Log.Errorf("Panic occured")
				rc.Log.Infof("%s", debug.Stack())
				resp = CreateResponse{
					err: errors.New("panic occured"),
				}
				err = nil
			}
		}()

		req.ReqRepo.FillLogContext(rc.Lctx)

		v, err := svc.Create(rc, req.ReqRepo)
		if err != nil {
			rc.Log.Errorf("repo.Service.Create failed: %s", err)
			return CreateResponse{err, v}, nil
		}

		return CreateResponse{nil, v}, nil

	}
}
